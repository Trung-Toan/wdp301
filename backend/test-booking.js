const mongoose = require('mongoose');
const { createAsync } = require('./src/service/appointment/book.service');

// Test data
const testPayload = {
    slot_id: "507f1f77bcf86cd799439011", // Thay b·∫±ng slot_id th·ª±c t·∫ø
    doctor_id: "507f1f77bcf86cd799439012", // Thay b·∫±ng doctor_id th·ª±c t·∫ø  
    patient_id: "507f1f77bcf86cd799439013", // Thay b·∫±ng patient_id th·ª±c t·∫ø
    specialty_id: "507f1f77bcf86cd799439014", // Thay b·∫±ng specialty_id th·ª±c t·∫ø
    clinic_id: "507f1f77bcf86cd799439015", // Thay b·∫±ng clinic_id th·ª±c t·∫ø
    full_name: "Nguy·ªÖn VƒÉn Test",
    phone: "0987654321",
    email: "test@example.com",
    dob: "1990-01-01",
    gender: "MALE",
    province_code: "01",
    ward_code: "00004",
    address_text: "S·ªë 123, ƒê∆∞·ªùng ABC",
    reason: "Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥"
};

async function testBooking() {
    try {
        console.log('üß™ Testing appointment booking...');

        // K·∫øt n·ªëi database
        await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/wdp301');
        console.log('‚úÖ Connected to database');

        // Test booking
        const result = await createAsync(testPayload);
        console.log('‚úÖ Booking successful:', result);

    } catch (error) {
        console.error('‚ùå Booking failed:', error.message);
        console.error('Full error:', error);
    } finally {
        await mongoose.disconnect();
        console.log('üîå Disconnected from database');
    }
}

// Ch·∫°y test
testBooking();
